v$session       会话
v$session_wait  等待状态的会话
v$session_wait_history  v$session_wait中最近10次的等待事件
v$active_session_history  保存处于等待状态的活动session的信息，每秒从v$session_wait中采样一次

wrh$_active_session_history 每小时对v$active_session_history进行采样一次 并且保留7天
dba_hist_active_sess_history 是wrh$_active_session_history和其他几个视图的联合展现
ash的内存大小
select pool, name, bytes/1024/1024 From v$sgastat where name like '%ASH %';



-- 查看数据库链接数:   
select * from v$session;   
  
-- 查看那些用户在使用数据库   
select distinct username from v$session;   
  
-- 查看数据库的SID   
select name from v$database;   
  
-- 查看系统被锁的事务时间   
select * from v$locked_object;   
  
-- 监控正在执行的事务   
select * from v$transaction;   
  
-- 查看是不是采用了RAC   
select * from gv$instance;  

select name,value from v$sysstat 


1.监控事例的等待：
         select event,sum(decode(wait_time,0,0,1)) prev, sum(decode(wait_time,0,1,0)) curr,count(*)
from v$session_wait 
group by event order by 4;
2.回滚段的争用情况：
select name,waits,gets,waits/gets ratio from v$rollstat a,v$rollname b where a.usn=b.usn;
3.监控表空间的I/O比例：
select df.tablespace_name name,df.file_name "file",f.phyrds pyr,f.phyblkrd pbr,f.phywrts pyw,
f.phyblkwrt pbw 
from v$filestat f,dba_data_files df
where f.file#=df.file_id
4.监空文件系统的I/O比例：
select substr(a.file#,1,2) "#",substr(a.name,1,30) "name",a.status,a.bytes,
b.phyrds,b.phywrts
from v$datafile a,v$filestat b
where a.file#=b.file#
5.在某个用户下找所有的索引：
select user_indexes.table_name, user_indexes.index_name,uniqueness, column_name
from user_ind_columns, user_indexes
where user_ind_columns.index_name = user_indexes.index_name
and user_ind_columns.table_name = user_indexes.table_name 
order by user_indexes.table_type, user_indexes.table_name,
user_indexes.index_name, column_position;
6. 监控 SGA 的命中率

select a.value + b.value "logical_reads", c.value "phys_reads",
round(100 * ((a.value+b.value)-c.value) / (a.value+b.value)) "BUFFER HIT RATIO" 
from v$sysstat a, v$sysstat b, v$sysstat c
where a.statistic# = 38 and b.statistic# = 39 
and c.statistic# = 40; 

7. 监控 SGA 中字典缓冲区的命中率

select parameter, gets,Getmisses , getmisses/(gets+getmisses)*100 "miss ratio",
(1-(sum(getmisses)/ (sum(gets)+sum(getmisses))))*100 "Hit ratio"
from v$rowcache 
where gets+getmisses <>0
group by parameter, gets, getmisses; 

8. 监控 SGA 中共享缓存区的命中率，应该小于1%

select sum(pins) "Total Pins", sum(reloads) "Total Reloads",
sum(reloads)/sum(pins) *100 libcache
from v$librarycache;

select sum(pinhits-reloads)/sum(pins) "hit radio",sum(reloads)/sum(pins) "reload percent" 
from v$librarycache;

9. 显示所有数据库对象的类别和大小

select count(name) num_instances ,type ,sum(source_size) source_size ,
sum(parsed_size) parsed_size ,sum(code_size) code_size ,sum(error_size) error_size,
sum(source_size) +sum(parsed_size) +sum(code_size) +sum(error_size) size_required 
from dba_object_size 
group by type order by 2;

10. 监控 SGA 中重做日志缓存区的命中率，应该小于1%

SELECT name, gets, misses, immediate_gets, immediate_misses,
Decode(gets,0,0,misses/gets*100) ratio1,
Decode(immediate_gets+immediate_misses,0,0,
immediate_misses/(immediate_gets+immediate_misses)*100) ratio2
FROM v$latch WHERE name IN ('redo allocation', 'redo copy'); 

11. 监控内存和硬盘的排序比率，最好使它小于 .10，增加 sort_area_size 

SELECT name, value FROM v$sysstat WHERE name IN ('sorts (memory)', 'sorts (disk)'); 


12. 监控当前数据库谁在运行什么SQL语句

SELECT osuser, username, sql_text from v$session a, v$sqltext b
where a.sql_address =b.address order by address, piece;

13. 监控字典缓冲区

SELECT (SUM(PINS - RELOADS)) / SUM(PINS) "LIB CACHE" FROM V$LIBRARYCACHE;
SELECT (SUM(GETS - GETMISSES - USAGE - FIXED)) / SUM(GETS) "ROW CACHE" FROM V$ROWCACHE;
SELECT SUM(PINS) "EXECUTIONS", SUM(RELOADS) "CACHE MISSES WHILE EXECUTING" FROM V$LIBRARYCACHE; 

后者除以前者,此比率小于1%,接近0%为好。

SELECT SUM(GETS) "DICTIONARY GETS",SUM(GETMISSES) "DICTIONARY CACHE GET MISSES"
FROM V$ROWCACHE

14. 找ORACLE字符集

select * from sys.props$ where name='NLS_CHARACTERSET'; 

15. 监控 MTS

select busy/(busy+idle) "shared servers busy" from v$dispatcher;

此值大于0.5时，参数需加大

select sum(wait)/sum(totalq) "dispatcher waits" from v$queue where type='dispatcher';
select count(*) from v$dispatcher;
select servers_highwater from v$mts;

servers_highwater接近mts_max_servers时，参数需加大

16. 碎片程度

select tablespace_name,count(tablespace_name) from dba_free_space group by tablespace_name 
having count(tablespace_name)>10;

alter tablespace name coalesce;
alter table name deallocate unused;

create or replace view ts_blocks_v as
select tablespace_name,block_id,bytes,blocks,'free space' segment_name from dba_free_space
union all
select tablespace_name,block_id,bytes,blocks,segment_name from dba_extents;

select * from ts_blocks_v;

select tablespace_name,sum(bytes),max(bytes),count(block_id) from dba_free_space 
group by tablespace_name;

查看碎片程度高的表

SELECT segment_name table_name , COUNT(*) extents
FROM dba_segments WHERE owner NOT IN ('SYS', 'SYSTEM') GROUP BY segment_name
HAVING COUNT(*) = (SELECT MAX( COUNT(*) ) FROM dba_segments GROUP BY segment_name);

17. 表、索引的存储情况检查

select segment_name,sum(bytes),count(*) ext_quan from dba_extents where 
tablespace_name='&tablespace_name' and segment_type='TABLE' group by tablespace_name,segment_name;

select segment_name,count(*) from dba_extents where segment_type='INDEX' and owner='&owner'
group by segment_name;

18、找使用CPU多的用户session

12是cpu used by this session

select a.sid,spid,status,substr(a.program,1,40) prog,a.terminal,osuser,value/60/100 value
from v$session a,v$process b,v$sesstat c
where c.statistic#=12 and c.sid=a.sid and a.paddr=b.addr order by value desc;

20.监控log_buffer的使用情况：(值最好小于1%，否则增加log_buffer 的大小)
select rbar.name,rbar.value,re.name,re.value,(rbar.value*100)/re.value||'%' "radio"
from v$sysstat rbar,v$sysstat re
where rbar.name='redo buffer allocation retries'
and re.name='redo entries';


19、查看运行过的SQL语句：

SELECT SQL_TEXT
FROM V$SQL










spool d:\10-10.log
Prompt 192.168.10.10 WCM03 分析 
Prompt 分析时间
SELECT SYSDATE FROM DUAL;
Prompt 数据库实例
SELECT NAME FROM V$DATABASE;
Prompt 检查数据文件的状态记录状态不是"online"的数据文件
Select file_name 
from dba_data_files 
where status='OFFLINE';
Prompt 检查表空间的使用情况 如果表空间使用超过80%，添加新的数据文件或者加大数据文件的大小
SELECT tablespace_name,
to_char(100*sum_free_m/sum_m, '99.99') || '%' AS pct_free,
max_m, 
count_blocks free_blk_cnt, 
sum_free_m 
FROM ( SELECT tablespace_name,
sum(bytes)/1024/1024 AS sum_m 
FROM dba_data_files 
GROUP BY tablespace_name), 
(SELECT tablespace_name AS fs_ts_name,
max(bytes)/1024/1024 AS max_m, 
count(blocks) AS count_blocks, 
sum(bytes/1024/1024) AS sum_free_m 
FROM dba_free_space 
GROUP BY tablespace_name ) 
WHERE tablespace_name = fs_ts_name;
Prompt 统计数据库的剩余的使用空间
SELECT tablespace_name, 
trunc ( sum (bytes ) / (1024*1024) ) as free_m,
sum ( blocks ) as free_blk , 
max ( bytes ) / (1024) as big_chunk_k, 
count (*) as num_chunks 
FROM dba_free_space 
GROUP BY tablespace_name ;
Prompt 检查无效的数据库对象
SELECT owner||' '||object_name||' '||object_type 
FROM dba_objects 
WHERE status='INVALID';
Prompt 检查不起作用的约束 
SELECT owner||' '||constraint_name||' '||table_name||' '||constraint_type||' '||status 
FROM dba_constraints 
WHERE status = 'DISABLED' 
AND constraint_type = 'P';
Prompt 检查无效的trigger
SELECT owner||' '||trigger_name||' '||table_name||' '|| status 
FROM dba_triggers 
WHERE status = 'DISABLED';
Prompt 自由范围的碎片
column FSFI format 999,99
select tablespace_name,
sqrt(max(blocks)/sum(blocks))*(100/sqrt(sqrt(count(blocks)))) FSFI
from dba_free_space
group by tablespace_name 
order by 1;
Prompt 数据缓冲命中率
SELECT a.VALUE + b.VALUE logical_reads, 
c.VALUE phys_reads, 
round(100*(1-c.value/(a.value+b.value)),4) hit_ratio 
FROM v$sysstat a,
v$sysstat b,
v$sysstat c 
WHERE a.NAME='db block gets' 
AND b.NAME='consistent gets' 
AND c.NAME='physical reads' ;
Prompt 语句的重载率
SELECT SUM(pins) total_pins,
SUM(reloads) total_reloads, 
SUM(reloads)/SUM(pins)*100 libcache_reload_ratio 
FROM v$librarycache; 
Prompt 用户锁状态
SELECT /*+ rule */ s.username, 
decode(l.type,'TM','TABLE LOCK', 'TX','ROW LOCK',NULL) LOCK_LEVEL, 
o.owner,
o.object_name,
o.object_type, 
s.sid,
s.serial#,
s.terminal,
s.machine,
s.program,
s.osuser 
FROM v$session s,
v$lock l,
dba_objects o 
WHERE l.sid = s.sid 
AND l.id1 = o.object_id(+) 
AND s.username is NOT NULL ;
Prompt 数据字典高速缓存
SELECT (1-(SUM(getmisses)/(SUM(gets)+SUM(getmisses))))*100 
FROM v$rowcache; 

Prompt 物理文件的使用频率
SELECT name||' '||phyrds||'/'||phywrts 
FROM v$datafile df,
v$filestat fs 
WHERE df.file# =fs.file#;
Prompt 调度进程的竞争
SELECT network,
sum(busy)/sum(busy)+sum(idle) 
FROM v$dispatcher 
GROUP BY network; 
Prompt 减少Free List竞争 
SELECT class,
count 
FROM v$waitstat 
WHERE class='free list'; 
SELECT sum(value) 
FROM v$sysstat 
WHERE name IN ('db block gets','consistent gets');
spool off


















1.监控事例的等待： 
　　select event,sum(decode(wait_time,0,0,1)) prev, sum(decode(wait_time,0,1,0)) curr,count(*) 
　　from v$session_wait  
　　group by event order by 4; 

　　2.回滚段的争用情况： 

　　select name,waits,gets,waits/gets ratio from v$rollstat a,v$rollname b where a.usn=b.usn; 

　　3.监控表空间的I/O比例： 

　　select df.tablespace_name name,df.file_name "file",f.phyrds pyr,f.phyblkrd pbr,f.phywrts pyw, 
　　f.phyblkwrt pbw  
　　from v$filestat f,dba_data_files df 
　　where f.file#=df.file_id 

　　4.监空文件系统的I/O比例： 

　　select substr(a.file#,1,2) "#",substr(a.name,1,30) "name",a.status,a.bytes, 
　　b.phyrds,b.phywrts 
　　from v$datafile a,v$filestat b 
　　where a.file#=b.file# 

　　5.在某个用户下找所有的索引： 

　　select user_indexes.table_name, user_indexes.index_name,uniqueness, column_name 
　　from user_ind_columns, user_indexes 
　　where user_ind_columns.index_name = user_indexes.index_name 
　　and user_ind_columns.table_name = user_indexes.table_name  
　　order by user_indexes.table_type, user_indexes.table_name, 
　　user_indexes.index_name, column_position; 

　　6. 监控 SGA 的命中率 

　　select a.value + b.value "logical_reads", c.value "phys_reads", 
　　round(100 * ((a.value+b.value)-c.value) / (a.value+b.value)) "BUFFER HIT RATIO"  
　　from v$sysstat a, v$sysstat b, v$sysstat c 
　　where a.statistic# = 38 and b.statistic# = 39  
　　and c.statistic# = 40;  

　　7. 监控 SGA 中字典缓冲区的命中率 

　　select parameter, gets,Getmisses , getmisses/(gets+getmisses)*100 "miss ratio", 
　　(1-(sum(getmisses)/ (sum(gets)+sum(getmisses))))*100 "Hit ratio" 
　　from v$rowcache  
　　where gets+getmisses <>0 
　　group by parameter, gets, getmisses;  

　　8. 监控 SGA 中共享缓存区的命中率，应该小于1% 

　　select sum(pins) "Total Pins", sum(reloads) "Total Reloads", 
　　sum(reloads)/sum(pins) *100 libcache 
　　from v$librarycache; 

　　select sum(pinhits-reloads)/sum(pins) "hit radio",sum(reloads)/sum(pins) "reload percent"  
　　from v$librarycache; 

　　9. 显示所有数据库对象的类别和大小 

　　select count(name) num_instances ,type ,sum(source_size) source_size , 
　　sum(parsed_size) parsed_size ,sum(code_size) code_size ,sum(error_size) error_size, 
　　sum(source_size) +sum(parsed_size) +sum(code_size) +sum(error_size) size_required  
　　from dba_object_size  
　　group by type order by 2; 

　　10. 监控 SGA 中重做日志缓存区的命中率，应该小于1% 

　　SELECT name, gets, misses, immediate_gets, immediate_misses, 
　　Decode(gets,0,0,misses/gets*100) ratio1, 
　　Decode(immediate_gets+immediate_misses,0,0, 
　　immediate_misses/(immediate_gets+immediate_misses)*100) ratio2 
　　FROM v$latch WHERE name IN ('redo allocation', 'redo copy');  

　　11. 监控内存和硬盘的排序比率，最好使它小于 .10，增加 sort_area_size  

　　SELECT name, value FROM v$sysstat WHERE name IN ('sorts (memory)', 'sorts (disk)');  

　　 
　　12. 监控当前数据库谁在运行什么SQL语句 

　　SELECT osuser, username, sql_text from v$session a, v$sqltext b 
　　where a.sql_address =b.address order by address, piece; 



　　13. 监控字典缓冲区 

　　SELECT (SUM(PINS - RELOADS)) / SUM(PINS) "LIB CACHE" FROM V$LIBRARYCACHE; 
　　SELECT (SUM(GETS - GETMISSES - USAGE - FIXED)) / SUM(GETS) "ROW CACHE" FROM V$ROWCACHE; 
　　SELECT SUM(PINS) "EXECUTIONS", SUM(RELOADS) "CACHE MISSES WHILE EXECUTING" FROM V$LIBRARYCACHE;  

　　后者除以前者,此比率小于1%,接近0%为好。 

　　SELECT SUM(GETS) "DICTIONARY GETS",SUM(GETMISSES) "DICTIONARY CACHE GET MISSES" 
　　FROM V$ROWCACHE 

　　14. 找ORACLE字符集 

　　select * from sys.props$ where name='NLS_CHARACTERSET';  

　　15. 监控 MTS 

　　select busy/(busy+idle) "shared servers busy" from v$dispatcher; 

　　此值大于0.5时，参数需加大 

　　select sum(wait)/sum(totalq) "dispatcher waits" from v$queue where type='dispatcher'; 
　　select count(*) from v$dispatcher; 
　　select servers_highwater from v$mts; 

　　servers_highwater接近mts_max_servers时，参数需加大 

　　16. 碎片程度 

　　select tablespace_name,count(tablespace_name) from dba_free_space group by tablespace_name  
　　having count(tablespace_name)>10; 

　　alter tablespace name coalesce; 
　　alter table name deallocate unused; 

　　create or replace view ts_blocks_v as 
　　select tablespace_name,block_id,bytes,blocks,'free space' segment_name from dba_free_space 
　　union all 
　　select tablespace_name,block_id,bytes,blocks,segment_name from dba_extents; 

　　select * from ts_blocks_v; 

　　select tablespace_name,sum(bytes),max(bytes),count(block_id) from dba_free_space  
　　group by tablespace_name; 

　　查看碎片程度高的表 

　　SELECT segment_name table_name , COUNT(*) extents 
　　FROM dba_segments WHERE owner NOT IN ('SYS', 'SYSTEM') GROUP BY segment_name 
　　HAVING COUNT(*) = (SELECT MAX( COUNT(*) ) FROM dba_segments GROUP BY segment_name); 

　　17. 表、索引的存储情况检查 

　　select segment_name,sum(bytes),count(*) ext_quan from dba_extents where  
　　tablespace_name='&tablespace_name' and segment_type='TABLE' group by tablespace_name,segment_name; 

　　select segment_name,count(*) from dba_extents where segment_type='INDEX' and owner='&owner' 
　　group by segment_name; 

　　18、找使用CPU多的用户session 

　　12是cpu used by this session 

　　select a.sid,spid,status,substr(a.program,1,40) prog,a.terminal,osuser,value/60/100 value 
　　from v$session a,v$process b,v$sesstat c 
　　where c.statistic#=12 and c.sid=a.sid and a.paddr=b.addr order by value desc; 

　　20.监控log_buffer的使用情况：(值最好小于1%，否则增加log_buffer 的大小) 
　　select rbar.name,rbar.value,re.name,re.value,(rbar.value*100)/re.value||'%' "radio" 
　　from v$sysstat rbar,v$sysstat re 
　　where rbar.name='redo buffer allocation retries' 
　　and re.name='redo entries'; 

　　 
　　19、查看运行过的SQL语句： 

　　SELECT SQL_TEXT 
　　FROM V$SQL 

select count(schemaname),machine from v$session group by machine;
 


oracle数据库的性能调整 [转] 

　　　　oracle是一个高性能数据库软件。用户可以通过参数的调整，达到性能的优化。性能优化主要分为两部分：一是数据库管理员通过对系统参数的调整达到优化的目的，二是开发人员通过对应用程序的优化达到调整的目的。  
　　在此，仅就系统参数的调整进行探讨，而不涉及应用程序的优化。对系统参数的调整，可以分为以下几个部分：  
　　(1)调整内存分配  
　　系统全局区（SGA）是一个分配给ORACLE 包含ORACLE 数据库实例控制信息的内存段。SGA的大小对系统性能的影响极大，其缺省参数设置只适用于配置很低的计算机，不适应收入系统现有设备的需要。这些参数若不作调整，会对系统资源造成巨大浪费。就收入系统的Alpha 1200而言，SGA的大小以160兆左右为宜。  
　　初始化参数文件中的一些参数对SGA的大小有决定性的影响。参数DB－BLOCK－BUFFERS（SGA中存储区高速缓存的缓冲区数目），参数SHARED－POOL－SIZE（分配给共享SQL区的字节数），是SGA大小的主要影响者。  
　　DB－BLOCK－BUFFERS参数是SGA大小和数据库性能的最重要的决定因素。该值较高，可以提高系统的命中率，减少I/O。每个缓冲区的大小等于参数DB－BLOCK－SIZE的大小。ORACLE数据库块以字节表示大小。  
　　Oracle SGA区共享池部分由库高速缓存、字典高速缓存及其他一些用户和服务器会话信息组成，共享池是最大的消耗成分。调整SGA区各个结构的大小，可以极大地提高系统的性能。  
　　.调整Library Cache  
　　库高速缓存（Library Cache）中包含私用和共享SQL区和PL/SQL区。调整SGA的重要问题是确保库高速缓存足够大，以使ORACLE能在共享池中保持分析和执行语句，提高语句分析和执行效率，降低资源消耗。通过比较Library Cache的命中率来决定它的大小。查询V＄LIBRARYCACHE 数据字典视图（其中，pins表示高速缓存命中率，reloads表示高速缓存失败）  
SQL〉SELECT SUM(pins),SUM(reloads)  
　　FROM v＄librarycache;  
如果sum(reload)/sum(pins)≈0，说明Library Cache的命中率比较合适，若大于1，则需要增加共享池（SHARED－POOL－SIZE）的大小（在初始化参数文件中）。  
　　.调整数据字典高速缓存（Dictionary Cache）  
　　数据字典高速缓存包括了有关数据库的结构、用户、实体信息等。数据字典的命中率对系统有很大的影响。命中率的计算中，getmisses 表示失败次数，gets表示成功次数。  
　　查询V＄ROWCACHE表：  
　　SQL>SELECT (1-(SUM(getmisses)/(SUM(gets)+SUM(getmisses))))*100  
　　FROM v＄rowcache;  
　　如果该值>90%，说明命中率合适。否则，应增大共享池的大小。  
　　.调整数据库缓冲区高速缓存  
　　Oracle 在运行期间向数据库高速缓存读写数据，高速缓存命中表示信息已在内存中，高速缓存失败意味着ORACLE必需进行磁盘I/O。保持高速缓存失败率最小的关键是确保高速缓存的大小。初始化参数DB－BLOCK－BUFFERS控制数据库缓冲区高速缓存的大小。可通过查询V＄SYSSTAT命中率，以确定是否应当增加DB－BLOCK－BUFFERS的值。  
　　SQL>SELECT name,value  
　　FROM V＄SYSSTAT  
　　WHERE name IN (’dbblock gets’,’consistent gets’,’physical reads’);  
　　通过查询结果  
　　命中率=1-physical reads/(dbblock gets+consistent gets)  
　　如果命中率<0.6～0.7，则应增大DB－BLOCK－BUFFERS。  
　　(2)调整磁盘I/O  
　　磁盘I/O是系统性能的瓶颈，解决好磁盘I/O，可明显提高性能。通过查询V＄FILESTAT可以知道每个物理文件的使用频率（phyrds表示每个数据文件读的次数，phywrts表示每个数据文件写的次数）  
　　
 
2007-12-3 11:41 回复  
 
旃檀大帝 
100位粉丝 
 5楼

SQL>SELECT name,phyrds,phywrts  
　　FROM v＄datafile df,v＄filestat fs  
　　WHERE df.file# =fs.file#;  
对于使用频率较高的物理文件,可以采用以下策略:  
　　.将I/O尽可能平均分配在尽可能多的磁盘上。  
　　.为表和索引建立不同的表空间。  
　　.将数据文件与重做日志文件分离在不同的磁盘上。  
　　.减少不经oracle SERVER的磁盘I/O。  
　　(3)调整竞争  
　　当多个进程对相同的资源发出申请时，产生竞争。  
　　.修改process参数  
　　该参数定义可以同时连接到oracle数据库的最大进程数，缺省值为50。注意，oracle的后台进程也包括在此数目中，建议将该值改为200。  
　　.减少调度进程的竞争  
　　减少调度进程的竞争，通过查询v＄dispatcher表来判定调度进程的竞争  
　　SQL>SELECT network ,sum(busy)/sum(busy)+sum(idle)  
　　FROM v＄dispatcher  
　　GROUP BY network;  
　　如果某种协议忙的比率超过50%，应增加MTS－DISPATCHERS的值。  
　　.减少多线程服务进程竞争  
　　首先查询V＄SYSSTAT表判定是否发生多线程服务进程竞争:  
　　SQL>SELECT DECODE(totalq,0,’No request’,wait/totalq||’hunderths of seconds’) FROM v＄sysstat  
　　WHERE type=’common’;  
　　如果共享服务进程数量已达到初始化参数文件中MTS－MAX－SERVERS指定的最大值，但应用运行时，平均请求等待时间仍持续增长，那么，应加大MTS－MAX－SERVERS的值。  
　　.减少重做日志缓冲区竞争  
　　通过查询V＄SYSSTAT表判定redo log 文件缓冲区是否足够。  
　　SQL>SELECT name,value  
　　FROM v＄sysstat  
　　WHERE name=’redo log space request’;  
　　此处value的值应接近于0，否则，应增大初始化参数文件的LOG－BUFFEQS的值。  
　　.减少回退段竞争  
　　回退段对性能也有影响，根据事物大小情况来分配合适的回退段。  
　　首先判定回退段的数量能否满足系统运行的需要：  
　　查询V＄WAITSTAT表与V＄SYSSTAT表  
　　SQL>SELECT class,count  
　　FROM v＄waitstat  
　　WHERE class IN (’system undo header’,system undo block’,  
　　’undo header’,’undo block’);  
　　SQL>SELECT sum(value)  
　　FROM v＄sysstat WHERE name IN (’db block gets’,’consistent gets’);  
　　如果任何一个class/sum(value)>10%,那么考虑增加回退段。回退段的数量一般按如下规律设定：  
　　用户数　　　　　　　　　 回退段个数  
n<16　　　　　　　　　　　　4  
16<n<32　　　　　　　　　　8  
32<=n　　　　　　　　　　　n/4 但不超过50  
　　.减少Free List竞争  
　　当多个进程同时向一个表中插入数据时，产生Free List竞争。  
　　SQL>SELECT class,count  
　　FROM v＄waitstat  
　　WHERE class=’free list’;  
　　SQL>SELECT sum(value)  
　　FROM v＄sysstat  
　　WHERE name IN (’db block gets’,’consistent gets’);  
　　如果class/sum(value)>1%，则应增加该表的Free List 的值。
 
2007-12-3 11:41 回复  
 
旃檀大帝 
100位粉丝 
 6楼

[Oracle]性能优化调整(四)--调整磁盘I/O  

一.虽然通过调整SGA组件可以最大限度地减少物理I/O的发生，但是我们在某些活动中还是不可避免的将会产生磁盘I/O。需要注意的是在内存中的I/O活动是逻辑的，在磁盘上的I/O活动是物理的。逻辑I/O比物理I/O快数千倍。 
  
 二.产生磁盘I/O的来源： 
 1.Database Writer(DBWO)--写Database Buffer Cache中的缓存区到数据库中的数据文件。 
 2.Database Writer(DBWO)--写数据到回退段以维护读一致性 
 3.用户Server Process--读取数据块到Database Buffer Cache中 
 4.Log Writer(LGWR)--从Redo Log Buffer中写事务恢复信息到Online Redo Log上 
 5.Archiver(ARC0)--读取重做日志的内容，并写到存档目标上 
 6.临时的大型排序写盘操作 
  
 三.调整物理I/O的2个目标： 
 1.适当的SGA大小 
 2.尽可能快地执行物理I/O 
 四.提高磁盘I/O需要调整的数据库物理结构 
 1.数据文件 
 2.DBWO 
 3.单个段数据块 
 4.排序操作和临时段 
 5.回退段 
  
 五.调整表空间与数据文件 
select s.FILE#||'D' "FILE#+TYPE" , d.NAME "DATAFILE", 
s.PHYRDS,s.PHYWRTS,s.AVGIOTIM,s.MINIOTIM,s.MAXIOWTM,s.MAXIORTM 
from v$filestat s,v$datafile d 
where s.FILE#=d.FILE# 
union 
select s.FILE#||'T' "FILE#+TYPE" , t.NAME "DATAFILE", 
s.PHYRDS,s.PHYWRTS,s.AVGIOTIM,s.MINIOTIM,s.MAXIOWTM,s.MAXIORTM 
from v$filestat s,v$tempfile t 
where s.FILE#=t.FILE# 
order by 1 
PHYRDS--该数据文件上发生的物理读次数 
PHYWRTS--该数据文件上发生的物理写次数 
AVGIOTIM--平均花费的I/O时间 
MINIOTIM--花费的最短时间 
MAXIOWTM--写操作花费的最长时间 
MAXIORTM--读操作花费的最长时间 
  
我们能够做的工作就是 
(1)不要将非Oracle文件放在与Oracle文件相同的磁盘上，避免引起对磁盘资源的潜在争用! 
(2)创建局部管理表空间(LMT Locally Managed Tablespace) 
(3)均衡数据文件I/O--不要把数据库的段集中放在某一个表空间，如:system.另外如果可能的话，将高频率的I/O数据文件放在不同的磁盘或者控制器上面 
(4)调整init.ora参数的DB_FILE_MULTIBLOCK_READ_COUNT--指定一个用户Server Process在执行全表扫描的时候，读取的最多数据块个数，默认是8 
 select name,value from v$sysstat 
 where name='table scans (long tables)' 
--如果统计数据很大，说明经常执行全表扫描，这样的话增大这个参数是有收获的 
  
 六.调整DBW0的性能 
DBW0是负责写Database Buffer Cache中的缓存区到数据库中的数据文件。 
由于数据文件可能驻留在一个速度比较慢的设备上或者DBW0写脏缓冲区的效率不高，早成了等待事件。  
  
 select event,total_waits,average_wait 
 from v$system_event where event in('buffer busy waits','db file parallel  
write' 
 ,'free buffer waits','write complete waits' 
 ) 
--如果发现等待次数过多，可能就需要调整 
(1)参数DBWR_IO_SLAVES --启动Database Writer从属进程 默认0 
(2)参数DB_WRITER_PROCESSES --启动额外Database Writer进程 与DBWR_IO_SLAVES相比可以DBWO的全部功能 默认1，最大10 
  
 七.调整段I/O 
ORACLE存储体系结构 
--数据库包含一个或多个表空间 
--表空间使用数据文件来存储段 
--段由一个或多个范围组成 
--范围由连续的ORACLE块组成 
--ORACLE块由连续的操作系统块组成 










oracle 性能监控之监控SQL语句
2009年06月07日 星期日 13:12
分析表 
analyze table tablename compute statistics for all indexes; 
analyze table tablename compute statistics for all indexed columns; 
analyze table tablename compute statistics for table; 

监控事例的等待 

select event,sum(decode(wait_Time,0,0,1)) "Prev", 
sum(decode(wait_Time,0,1,0)) "Curr",count(*) "Tot" 
from v$session_Wait 
group by event order by 4; 

查看碎片程度高的表 

SELECT segment_name table_name , COUNT(*) extents 
FROM dba_segments WHERE owner NOT IN (SYS, SYSTEM) GROUP BY segment_name 
HAVING COUNT(*) = (SELECT MAX( COUNT(*) FROM dba_segments GROUP BY segment_name); 

表、索引的存储情况检查 

select segment_name,sum(bytes),count(*) ext_quan from dba_extents where 
tablespace_name=&tablespace_name and segment_type=TABLE group by tablespace_name,segment_name; 

select segment_name,count(*) from dba_extents where segment_type=INDEX and owner=&owner 
group by segment_name; 

找使用CPU多的用户session 

12是cpu used by this session 

select a.sid,spid,status,substr(a.program,1,40) prog,a.terminal,osuser,value/60/100 value 
from v$session a,v$process b,v$sesstat c 
where c.statistic#=12 and c.sid=a.sid and a.paddr=b.addr order by value desc; 

监控表空间的 I/O 比例 

select df.tablespace_name name,df.file_name "file",f.phyrds pyr, 
f.phyblkrd pbr,f.phywrts pyw, f.phyblkwrt pbw 
from v$filestat f, dba_data_files df 
where f.file# = df.file_id 
order by df.tablespace_name; 


回滚段的争用情况 

select name, waits, gets, waits/gets "Ratio" 
from v$rollstat a, v$rollname b 
where a.usn = b.usn; 

在某个用户下找所有的索引 

select user_indexes.table_name, user_indexes.index_name,uniqueness, column_name 
from user_ind_columns, user_indexes 
where user_ind_columns.index_name = user_indexes.index_name 
and user_ind_columns.table_name = user_indexes.table_name 
order by user_indexes.table_type, user_indexes.table_name, 
user_indexes.index_name, column_position; 


监控文件系统的 I/O 比例 

select substr(a.file#,1,2) "#", substr(a.name,1,30) "Name", 
a.status, a.bytes, b.phyrds, b.phywrts 
from v$datafile a, v$filestat b 
where a.file# = b.file#; 

监控 SGA 中字典缓冲区的命中率 

select parameter, gets,Getmisses , getmisses/(gets+getmisses)*100 "miss ratio", 
(1-(sum(getmisses)/ (sum(gets)+sum(getmisses))))*100 "Hit ratio" 
from v$rowcache 
where gets+getmisses <>0 
group by parameter, gets, getmisses; 

监控 SGA 中共享缓存区的命中率，应该小于1％ 

select sum(pins) "Total Pins", sum(reloads) "Total Reloads", 
sum(reloads)/sum(pins) *100 libcache 
from v$librarycache; 

select sum(pinhits-reloads)/sum(pins) "hit radio",sum(reloads)/sum(pins) "reload percent" 
from v$librarycache; 

监控 SGA 的命中率 

select a.value + b.value "logical_reads", c.value "phys_reads", 
round(100 * ((a.value+b.value)-c.value) / (a.value+b.value)) "BUFFER HIT RATIO" 
from v$sysstat a, v$sysstat b, v$sysstat c 
where a.statistic# = 38 and b.statistic# = 39 
and c.statistic# = 40; 

监控 SGA 中重做日志缓存区的命中率，应该小于1％ 

SELECT name, gets, misses, immediate_gets, immediate_misses, 
Decode(gets,0,0,misses/gets*100) ratio1, 
Decode(immediate_gets+immediate_misses,0,0, 
immediate_misses/(immediate_gets+immediate_misses)*100) ratio2 
FROM v$latch WHERE name IN (redo allocation, redo copy); 

显示所有数据库对象的类别和大小 

select count(name) num_instances ,type ,sum(source_size) source_size , 
sum(parsed_size) parsed_size ,sum(code_size) code_size ,sum(error_size) error_size, 
sum(source_size) +sum(parsed_size) +sum(code_size) +sum(error_size) size_required 
from dba_object_size 
group by type order by 2; 

监控内存和硬盘的排序比率，最好使它小于 .10，增加 sort_area_size 

SELECT name, value FROM v$sysstat WHERE name IN (sorts (memory), sorts (disk)); 


监控当前数据库谁在运行什么SQL语句 

SELECT osuser, username, sql_text from v$session a, v$sqltext b 
where a.sql_address =b.address order by address, piece; 

监控字典缓冲区 

SELECT (SUM(PINS - RELOADS)) / SUM(PINS) "LIB CACHE" FROM V$LIBRARYCACHE; 
SELECT (SUM(GETS - GETMISSES - USAGE - FIXED)) / SUM(GETS) "ROW CACHE" FROM V$ROWCACHE; 
SELECT SUM(PINS) "EXECUTIONS", SUM(RELOADS) "CACHE MISSES WHILE EXECUTING" FROM V$LIBRARYCACHE; 

后者除以前者,此比率小于1％,接近0％为好。 

SELECT SUM(GETS) "DICTIONARY GETS",SUM(GETMISSES) "DICTIONARY CACHE GET MISSES" 
FROM V$ROWCACHE 

监控 MTS 

select busy/(busy+idle) "shared servers busy" from v$dispatcher; 

此值大于0.5时，参数需加大 

select sum(wait)/sum(totalq) "dispatcher waits" from v$queue where type=dispatcher; 
select count(*) from v$dispatcher; 
select servers_highwater from v$mts; 

servers_highwater接近mts_max_servers时，参数需加大 

碎片程度 

select tablespace_name,count(tablespace_name) from dba_free_space group by tablespace_name 
having count(tablespace_name)>10; 

alter tablespace name coalesce; 
alter table name deallocate unused; 

create or replace view ts_blocks_v as 
select tablespace_name,block_id,bytes,blocks,free space segment_name from dba_free_space 
union all 
select tablespace_name,block_id,bytes,blocks,segment_name from dba_extents; 

select * from ts_blocks_v; 

select tablespace_name,sum(bytes),max(bytes),count(block_id) from dba_free_space 
group by tablespace_name; 




v$sqlstats  v$sysstat, v$system_event, v$filestat, v$rollstat, v$latch, 





